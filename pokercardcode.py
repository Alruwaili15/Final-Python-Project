# -*- coding: utf-8 -*-
"""PokerCardCode.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y_WlH_m1KM5k8HL3YzQ3qUZoP14knoXB
"""

!pip install ultralytics

from google.colab import drive
drive.mount('/content/drive')

import os

# Create parent directory if it doesn't exist
folder_path = "/content/drive/My Drive/Newtry/poker-1"
os.makedirs(folder_path, exist_ok=True)

# Define the file path
file_path = os.path.join(folder_path, "data.yaml")

import yaml

# I define the file path for the data file!
file_path = "/content/drive/MyDrive/Newtry/poker-1/data.yaml"

# I define the YAML data, because the file supported by Yaml file type
data = {
    "train": "/content/drive/MyDrive/Newtry/poker-1/train/images",
    "val": "/content/drive/MyDrive/Newtry/poker-1/valid/images",
    "test": "/content/drive/MyDrive/Newtry/poker-1/test/images",
    "names": [
        '10C', '2C', '3C', '4C', '5C', '6C', '7C', '8C', '9C', 'AC', 'JC', 'KC', 'QC',
        '10D', '2D', '3D', '4D', '5D', '6D', '7D', '8D', '9D', 'AD', 'JD', 'KD', 'QD',
        '10H', '2H', '3H', '4H', '5H', '6H', '7H', '8H', '9H', 'AH', 'JH', 'KH', 'QH',
        '10S', '2S', '3S', '4S', '5S', '6S', '7S', '8S', '9S', 'AS', 'JS', 'KS', 'QS',
        'backcard'
    ],
    "nc": 53
}

# Write the YAML data to a file
with open(file_path, 'w') as file:
    yaml.dump(data, file, default_flow_style=False)

print(f"The data file is already written to this file path: {file_path}")

from ultralytics import YOLO
import cv2
import yaml
from google.colab import drive
from google.colab.patches import cv2_imshow

# I mount Google Drive for the data analysis
drive.mount('/content/drive')

# File paths
img = "/content/drive/MyDrive/Newtry/poker-1/train/images/5640_png.rf.c358001a0559bcc4553b00559de01f14.jpg"
imgAnot = "/content/drive/My Drive/Newtry/poker-1/train/labels/5640_png.rf.c358001a0559bcc4553b00559de01f14.txt"
data_yaml_file = "/content/drive/MyDrive/Newtry/poker-1/data.yaml"

# labelling names
with open(data_yaml_file, 'r') as file:
    data = yaml.safe_load(file)

label_names = data['names']
print("Labels:", label_names)

# 1st step! loading the image
img = cv2.imread(img)
H, W, _ = img.shape

# 2nd step!reading annotation file
with open(imgAnot, 'r') as file:
    lines = file.readlines()

annotations = []
for line in lines:
    values = line.split()
    label = values[0]
    x, y, w, h = map(float, values[1:])
    annotations.append((label, x, y, w, h))
print("Annotations:", annotations)

# Draw bounding boxes
for annotation in annotations:
    label, x, y, w, h = annotation
    label_name = label_names[int(label)]

    # YOLO coordinates to pixel coordinates
    x1 = int((x - w / 2) * W)
    y1 = int((y - h / 2) * H)
    x2 = int((x + w / 2) * W)
    y2 = int((y + h / 2) * H)

    # bounding box
    cv2.rectangle(img, (x1, y1), (x2, y2), (200, 200, 0), 1)

    # Display the label name
    cv2.putText(img, label_name, (x1, y1 - 5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (200, 200, 0), 2)

# Display image in Colab
cv2_imshow(img)

import torch

# Check CUDA and GPU availability
print("CUDA Available:", torch.cuda.is_available())
print("Number of GPUs:", torch.cuda.device_count())
if torch.cuda.is_available():
    print("GPU Name:", torch.cuda.get_device_name(0))

!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

!nvidia-smi

!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

import torch
print("CUDA Available:", torch.cuda.is_available())
print("PyTorch Version:", torch.__version__)
print("CUDA Version:", torch.version.cuda)

!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

import os
print("CUDA_VISIBLE_DEVICES:", os.environ.get("CUDA_VISIBLE_DEVICES"))

from ultralytics import YOLO

def main(): # definfing the main function!
    # Loading the model
    model = YOLO("yolov8n.yaml")

    # Uinge the config file
    data_yaml_file = "/content/drive/MyDrive/Newtry/poker-1/data.yaml"

    project = "/content/drive/My Drive/Newtry/poker-1"
    experiment = "MyNewCardModelResults"

    batch_size = 32

    # Training the model
    results = model.train(
        data=data_yaml_file,
        epochs=50,
        # I train the model foe 50 epochs as recommended!
        project=project,
        name=experiment,
        batch=batch_size,
        device=0,
        # I used GPU instead of CPU and this the main reason why I used google colab to save time!
        imgsz=640,
        patience=5,
        verbose=True,
        val=True
    )

    # It will be Saved in: C:/Data-sets/Playing Cards/y-Card-Model


if __name__ == "__main__":
    main()