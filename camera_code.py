from ultralytics import YOLO
import cv2

def detect_cards():
    #### Loading the trained YOLO model generated by my google colab account! which is the best.py file! 
    model = YOLO("C://Users//ength//Desktop//29th Projects//ASU Manufacturing Program//MFG598 Python//Projecct Work//FinalPokerCardsDetection4Video//googlecolab//weights//weights//best.pt")

    ##### This function to turn the cam on ! 
    #### I have two options to use the webcam (0) or high quailty cam, USB cam (1)
    ### Important note: The webcam camera gives hard time to detect the cards
    ### and I recommand to use high quality cam for better detecting results! 
    cap = cv2.VideoCapture(1)

    if not cap.isOpened(): # I learned this step from AI guideness to print each step to know where the error was coming from! 
        print("There is Error: check the cam, it's not open webcam.")
        return
# My code was lagging and I needed to close the terminal to stop running 
# I used "Q" to exit and it helps with this issue! 
    print("Press 'Q' to exit") 

    while True:
        # Capture a frame from the webcam
        ret, frame = cap.read()
        if not ret:
            print("Failed to grab frame.")
            break
        # conf is basically how fast the detection will appear on the card! 
        # I used 0.2 where I found it more decent in this case 
        #results = model.predict(frame, conf=0.5)
        results = model.predict(frame, conf=0.25)


        ### This step for bounding boxes and labeling, I used general labeling that I found online!
        for result in results[0].boxes:
            x1, y1, x2, y2 = map(int, result.xyxy[0])  
            label_index = int(result.cls[0])  
            confidence = result.conf[0]  
            label = f"{model.names[label_index]}: {confidence:.2f}"  
            
            ## This step for bounding boxes and labeling, I used general labeling that I found online!

            cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
            cv2.putText(frame, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

        # Display the frame with detections
        cv2.imshow("Card Detection", frame)

        # stop it when 'q' is pressed
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # run the cam and close OpenCV windows!!!
    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    detect_cards()
